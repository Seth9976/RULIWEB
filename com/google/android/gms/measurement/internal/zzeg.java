package com.google.android.gms.measurement.internal;

import com.google.android.gms.internal.measurement.zzoj;
import java.util.ArrayList;
import java.util.Collections;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

public final class zzeg {
    public static final zzef zzA;
    public static final zzef zzB;
    public static final zzef zzC;
    public static final zzef zzD;
    public static final zzef zzE;
    public static final zzef zzF;
    public static final zzef zzG;
    public static final zzef zzH;
    public static final zzef zzI;
    public static final zzef zzJ;
    public static final zzef zzK;
    public static final zzef zzL;
    public static final zzef zzM;
    public static final zzef zzN;
    public static final zzef zzO;
    public static final zzef zzP;
    public static final zzef zzQ;
    public static final zzef zzR;
    public static final zzef zzS;
    public static final zzef zzT;
    public static final zzef zzU;
    public static final zzef zzV;
    public static final zzef zzW;
    public static final zzef zzX;
    public static final zzef zzY;
    public static final zzef zzZ;
    public static final zzef zza;
    public static final zzef zzaA;
    public static final zzef zzaB;
    public static final zzef zzaC;
    public static final zzef zzaD;
    public static final zzef zzaE;
    public static final zzef zzaF;
    public static final zzef zzaG;
    public static final zzef zzaH;
    public static final zzef zzaI;
    private static final List zzaJ;
    private static final Set zzaK;
    public static final zzef zzaa;
    public static final zzef zzab;
    public static final zzef zzac;
    public static final zzef zzad;
    public static final zzef zzae;
    public static final zzef zzaf;
    public static final zzef zzag;
    public static final zzef zzah;
    public static final zzef zzai;
    public static final zzef zzaj;
    public static final zzef zzak;
    public static final zzef zzal;
    public static final zzef zzam;
    public static final zzef zzan;
    public static final zzef zzao;
    public static final zzef zzap;
    public static final zzef zzaq;
    public static final zzef zzar;
    public static final zzef zzas;
    public static final zzef zzat;
    public static final zzef zzau;
    public static final zzef zzav;
    public static final zzef zzaw;
    public static final zzef zzax;
    public static final zzef zzay;
    public static final zzef zzaz;
    public static final zzef zzb;
    public static final zzef zzc;
    public static final zzef zzd;
    public static final zzef zze;
    public static final zzef zzf;
    public static final zzef zzg;
    public static final zzef zzh;
    public static final zzef zzi;
    public static final zzef zzj;
    public static final zzef zzk;
    public static final zzef zzl;
    public static final zzef zzm;
    public static final zzef zzn;
    public static final zzef zzo;
    public static final zzef zzp;
    public static final zzef zzq;
    public static final zzef zzr;
    public static final zzef zzs;
    public static final zzef zzt;
    public static final zzef zzu;
    public static final zzef zzv;
    public static final zzef zzw;
    public static final zzef zzx;
    public static final zzef zzy;
    public static final zzef zzz;

    static {
        zzeg.zzaJ = Collections.synchronizedList(new ArrayList());
        zzeg.zzaK = Collections.synchronizedSet(new HashSet());
        zzeg.zza = zzeg.zza("measurement.ad_id_cache_time", 10000L, 10000L, () -> zzoj.zzb());
        zzeg.zzb = zzeg.zza("measurement.app_uninstalled_additional_ad_id_cache_time", 3600000L, 3600000L, () -> zzoj.zzc());
        zzeg.zzc = zzeg.zza("measurement.monitoring.sample_period_millis", 86400000L, 86400000L, () -> zzoj.zzn());
        zzeg.zzd = zzeg.zza("measurement.config.cache_time", 86400000L, 3600000L, () -> zzoj.zze());
        zzeg.zze = zzeg.zza("measurement.config.url_scheme", "https", "https", () -> zzoj.zzM());
        zzeg.zzf = zzeg.zza("measurement.config.url_authority", "app-measurement.com", "app-measurement.com", () -> zzoj.zzL());
        zzeg.zzg = zzeg.zza("measurement.upload.max_bundles", 100, 100, () -> ((int)zzoj.zzy()));
        zzeg.zzh = zzeg.zza("measurement.upload.max_batch_size", 0x10000, 0x10000, () -> ((int)zzoj.zzG()));
        zzeg.zzi = zzeg.zza("measurement.upload.max_bundle_size", 0x10000, 0x10000, () -> ((int)zzoj.zzx()));
        zzeg.zzj = zzeg.zza("measurement.upload.max_events_per_bundle", 1000, 1000, () -> ((int)zzoj.zzB()));
        zzeg.zzk = zzeg.zza("measurement.upload.max_events_per_day", 100000, 100000, () -> ((int)zzoj.zzC()));
        zzeg.zzl = zzeg.zza("measurement.upload.max_error_events_per_day", 1000, 1000, () -> ((int)zzoj.zzA()));
        zzeg.zzm = zzeg.zza("measurement.upload.max_public_events_per_day", 50000, 50000, () -> ((int)zzoj.zzD()));
        zzeg.zzn = zzeg.zza("measurement.upload.max_conversions_per_day", 10000, 10000, () -> ((int)zzoj.zzz()));
        zzeg.zzo = zzeg.zza("measurement.upload.max_realtime_events_per_day", 10, 10, () -> ((int)zzoj.zzF()));
        zzeg.zzp = zzeg.zza("measurement.store.max_stored_events_per_app", 100000, 100000, () -> ((int)zzoj.zzh()));
        zzeg.zzq = zzeg.zza("measurement.upload.url", "https://app-measurement.com/a", "https://app-measurement.com/a", () -> zzoj.zzN());
        zzeg.zzr = zzeg.zza("measurement.upload.backoff_period", 43200000L, 43200000L, () -> zzoj.zzu());
        zzeg.zzs = zzeg.zza("measurement.upload.window_interval", 3600000L, 3600000L, () -> zzoj.zzJ());
        zzeg.zzt = zzeg.zza("measurement.upload.interval", 3600000L, 3600000L, () -> zzoj.zzw());
        zzeg.zzu = zzeg.zza("measurement.upload.realtime_upload_interval", 10000L, 10000L, () -> zzoj.zzo());
        zzeg.zzv = zzeg.zza("measurement.upload.debug_upload_interval", 1000L, 1000L, () -> zzoj.zzf());
        zzeg.zzw = zzeg.zza("measurement.upload.minimum_delay", 500L, 500L, () -> zzoj.zzm());
        zzeg.zzx = zzeg.zza("measurement.alarm_manager.minimum_interval", 60000L, 60000L, () -> zzoj.zzl());
        zzeg.zzy = zzeg.zza("measurement.upload.stale_data_deletion_interval", 86400000L, 86400000L, () -> zzoj.zzr());
        zzeg.zzz = zzeg.zza("measurement.upload.refresh_blacklisted_config_interval", 604800000L, 604800000L, () -> zzoj.zzp());
        zzeg.zzA = zzeg.zza("measurement.upload.initial_upload_delay_time", 15000L, 15000L, () -> zzoj.zzv());
        zzeg.zzB = zzeg.zza("measurement.upload.retry_time", 1800000L, 1800000L, () -> zzoj.zzI());
        zzeg.zzC = zzeg.zza("measurement.upload.retry_count", 6, 6, () -> ((int)zzoj.zzH()));
        zzeg.zzD = zzeg.zza("measurement.upload.max_queue_time", 2419200000L, 2419200000L, () -> zzoj.zzE());
        zzeg.zzE = zzeg.zza("measurement.lifetimevalue.max_currency_tracked", 4, 4, () -> ((int)zzoj.zzg()));
        zzeg.zzF = zzeg.zza("measurement.audience.filter_result_max_count", 200, 200, () -> ((int)zzoj.zzj()));
        zzeg.zzG = zzeg.zza("measurement.upload.max_public_user_properties", 25, 25, null);
        zzeg.zzH = zzeg.zza("measurement.upload.max_event_name_cardinality", 500, 500, null);
        zzeg.zzI = zzeg.zza("measurement.upload.max_public_event_params", 25, 25, null);
        zzeg.zzJ = zzeg.zza("measurement.service_client.idle_disconnect_millis", 5000L, 5000L, () -> zzoj.zzq());
        zzeg.zzK = zzeg.zza("measurement.test.boolean_flag", Boolean.FALSE, Boolean.FALSE, zzbp.zza);
        zzeg.zzL = zzeg.zza("measurement.test.string_flag", "---", "---", zzbq.zza);
        zzeg.zzM = zzeg.zza("measurement.test.long_flag", -1L, -1L, zzbr.zza);
        zzeg.zzN = zzeg.zza("measurement.test.int_flag", -2, -2, zzbt.zza);
        zzeg.zzO = zzeg.zza("measurement.test.double_flag", -3.0, -3.0, zzbu.zza);
        zzeg.zzP = zzeg.zza("measurement.experiment.max_ids", 50, 50, zzbv.zza);
        zzeg.zzQ = zzeg.zza("measurement.upload.max_item_scoped_custom_parameters", 27, 27, zzbw.zza);
        zzeg.zzR = zzeg.zza("measurement.max_bundles_per_iteration", 100, 100, zzby.zza);
        zzeg.zzS = zzeg.zza("measurement.sdk.attribution.cache.ttl", 604800000L, 604800000L, zzbz.zza);
        zzeg.zzT = zzeg.zza("measurement.redaction.app_instance_id.ttl", 7200000L, 7200000L, zzca.zza);
        zzeg.zzU = zzeg.zza("measurement.collection.log_event_and_bundle_v2", Boolean.TRUE, Boolean.TRUE, zzcb.zza);
        zzeg.zzV = zzeg.zza("measurement.quality.checksum", Boolean.FALSE, Boolean.FALSE, null);
        zzeg.zzW = zzeg.zza("measurement.audience.use_bundle_end_timestamp_for_non_sequence_property_filters", Boolean.FALSE, Boolean.FALSE, zzcc.zza);
        zzeg.zzX = zzeg.zza("measurement.audience.refresh_event_count_filters_timestamp", Boolean.FALSE, Boolean.FALSE, zzce.zza);
        zzeg.zzY = zzeg.zza("measurement.audience.use_bundle_timestamp_for_event_count_filters", Boolean.FALSE, Boolean.FALSE, zzcf.zza);
        zzeg.zzZ = zzeg.zza("measurement.sdk.collection.retrieve_deeplink_from_bow_2", Boolean.TRUE, Boolean.TRUE, zzcg.zza);
        zzeg.zzaa = zzeg.zza("measurement.sdk.collection.last_deep_link_referrer_campaign2", Boolean.FALSE, Boolean.FALSE, zzch.zza);
        zzeg.zzab = zzeg.zza("measurement.lifecycle.app_in_background_parameter", Boolean.FALSE, Boolean.FALSE, zzci.zza);
        zzeg.zzac = zzeg.zza("measurement.integration.disable_firebase_instance_id", Boolean.FALSE, Boolean.FALSE, zzck.zza);
        zzeg.zzad = zzeg.zza("measurement.collection.service.update_with_analytics_fix", Boolean.FALSE, Boolean.FALSE, zzcl.zza);
        zzeg.zzae = zzeg.zza("measurement.client.firebase_feature_rollout.v1.enable", Boolean.TRUE, Boolean.TRUE, zzcm.zza);
        zzeg.zzaf = zzeg.zza("measurement.client.sessions.check_on_reset_and_enable2", Boolean.TRUE, Boolean.TRUE, zzcn.zza);
        zzeg.zzag = zzeg.zza("measurement.collection.synthetic_data_mitigation", Boolean.FALSE, Boolean.FALSE, zzcp.zza);
        zzeg.zzah = zzeg.zza("measurement.service.storage_consent_support_version", 203600, 203600, zzcq.zza);
        zzeg.zzai = zzeg.zza("measurement.client.click_identifier_control.dev", Boolean.FALSE, Boolean.FALSE, zzcr.zza);
        zzeg.zzaj = zzeg.zza("measurement.service.click_identifier_control", Boolean.FALSE, Boolean.FALSE, zzcs.zza);
        zzeg.zzak = zzeg.zza("measurement.service.store_null_safelist", Boolean.TRUE, Boolean.TRUE, zzct.zza);
        zzeg.zzal = zzeg.zza("measurement.service.store_safelist", Boolean.TRUE, Boolean.TRUE, zzcu.zza);
        zzeg.zzam = zzeg.zza("measurement.collection.enable_session_stitching_token.first_open_fix", Boolean.TRUE, Boolean.TRUE, zzcw.zza);
        zzeg.zzan = zzeg.zza("measurement.collection.enable_session_stitching_token.client.dev", Boolean.TRUE, Boolean.TRUE, zzcx.zza);
        zzeg.zzao = zzeg.zza("measurement.session_stitching_token_enabled", Boolean.FALSE, Boolean.FALSE, zzcy.zza);
        zzeg.zzap = zzeg.zza("measurement.sgtm.client.dev", Boolean.FALSE, Boolean.FALSE, zzda.zza);
        zzeg.zzaq = zzeg.zza("measurement.sgtm.service", Boolean.FALSE, Boolean.FALSE, zzdb.zza);
        zzeg.zzar = zzeg.zza("measurement.redaction.retain_major_os_version", Boolean.TRUE, Boolean.TRUE, zzdc.zza);
        zzeg.zzas = zzeg.zza("measurement.redaction.scion_payload_generator", Boolean.TRUE, Boolean.TRUE, zzdd.zza);
        zzeg.zzat = zzeg.zza("measurement.service.clear_global_params_on_uninstall", Boolean.TRUE, Boolean.TRUE, zzde.zza);
        zzeg.zzau = zzeg.zza("measurement.sessionid.enable_client_session_id", Boolean.TRUE, Boolean.TRUE, zzdf.zza);
        zzeg.zzav = zzeg.zza("measurement.sfmc.client", Boolean.TRUE, Boolean.TRUE, zzdg.zza);
        zzeg.zzaw = zzeg.zza("measurement.sfmc.service", Boolean.TRUE, Boolean.TRUE, zzdi.zza);
        zzeg.zzax = zzeg.zza("measurement.gmscore_feature_tracking", Boolean.TRUE, Boolean.TRUE, zzdj.zza);
        zzeg.zzay = zzeg.zza("measurement.fix_health_monitor_stack_trace", Boolean.TRUE, Boolean.TRUE, zzdl.zza);
        zzeg.zzaz = zzeg.zza("measurement.item_scoped_custom_parameters.client", Boolean.TRUE, Boolean.TRUE, zzdm.zza);
        zzeg.zzaA = zzeg.zza("measurement.item_scoped_custom_parameters.service", Boolean.FALSE, Boolean.FALSE, zzdn.zza);
        zzeg.zzaB = zzeg.zza("measurement.remove_app_background.client", Boolean.FALSE, Boolean.FALSE, zzdo.zza);
        zzeg.zzaC = zzeg.zza("measurement.rb.attribution.service", Boolean.FALSE, Boolean.FALSE, zzdp.zza);
        zzeg.zzaD = zzeg.zza("measurement.collection.client.log_target_api_version", Boolean.TRUE, Boolean.TRUE, zzdq.zza);
        zzeg.zzaE = zzeg.zza("measurement.collection.service.log_target_api_version", Boolean.TRUE, Boolean.TRUE, zzdr.zza);
        zzeg.zzaF = zzeg.zza("measurement.client.deep_link_referrer_fix", Boolean.TRUE, Boolean.TRUE, zzds.zza);
        zzeg.zzaG = zzeg.zza("measurement.client.sessions.enable_fix_background_engagement", Boolean.FALSE, Boolean.FALSE, zzdu.zza);
        zzeg.zzaH = zzeg.zza("measurement.link_sst_to_sid", Boolean.TRUE, Boolean.TRUE, zzdw.zza);
        zzeg.zzaI = zzeg.zza("measurement.client.ad_id_consent_fix", Boolean.TRUE, Boolean.TRUE, zzdx.zza);
    }

    static zzef zza(String s, Object object0, Object object1, zzec zzec0) {
        zzef zzef0 = new zzef(s, object0, object1, zzec0, null);
        zzeg.zzaJ.add(zzef0);
        return zzef0;
    }
}

